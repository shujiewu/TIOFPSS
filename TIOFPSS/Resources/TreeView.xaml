<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:TIOFPSS="clr-namespace:TIOFPSS">
    <TIOFPSS:LevelToMarginConverter x:Key="LevelToMarginConverter" />
    <SolidColorBrush x:Key="MouseMoveBackgroundBrush" Color="#E6F2FA"/>
    <SolidColorBrush x:Key="MouseMoveInnerBorderBrush" Color="#E6F2FA"/>
    <SolidColorBrush x:Key="MouseMoveOutBorderBrush" Color="#E6F2FA"/>

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedInnerBorderBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedOutBorderBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedLostFoucsBackgroundBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedLostFoucsInnerBorderBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedLostFoucsOutBorderBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedMouseMoveBackgroundBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedMouseMoveInnerBorderBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="SelectedMouseMoveOutBorderBrush" Color="#E1E1E1"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ff000000"/>
        <Setter Property="BorderBrush" Value="#FF1BBBFA"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="12" Height="12" BorderThickness="0.3">
                        <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" Data="M2,1 L6.5,5.5 2,10 z" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 1 10 L 7 3 L 7 10 Z"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{Binding RelativeSource={RelativeSource Self},Path=Stroke}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid Margin="{Binding Level, Converter={StaticResource LevelToMarginConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"  Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" HorizontalAlignment="Left"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Image x:Name="img" Grid.Column="1" Width="15" Height="15" Margin="5 ,0,0,0" Source="pack://application:,,,/TIOFPSS;component/Images/folderopen.png"/>
                                <ContentPresenter Grid.Column="2" Margin="8,0,0,0" x:Name="PART_Header" ContentSource="Header" 
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="img" Property="Source" Value="{Binding Type}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="img" Property="Source" Value="{Binding Type}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="False" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="False" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected"  Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter TargetName="Expander" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter TargetName="Expander" Property="Foreground" Value="#ffffffff"/>
                            <Setter TargetName="Expander" Property="BorderBrush" Value="#ffffffff"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Bd" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource 
                ResourceKey=MouseMoveBackgroundBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource 
                ResourceKey=MouseMoveInnerBorderBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource 
                ResourceKey=MouseMoveOutBorderBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter TargetName="Expander" Property="Background" Value="Transparent"/>
                            <Setter TargetName="Expander" Property="Foreground" Value="#ff000000"/>
                            <Setter TargetName="Expander" Property="BorderBrush" Value="#FF1BBBFA"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    

</ResourceDictionary>